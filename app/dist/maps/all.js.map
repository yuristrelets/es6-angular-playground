{"version":3,"sources":["modules/Core/module.js","modules/Core/controllers/Core.js","modules/Core/controllers/New.js","lib.js","app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["import lib from 'lib';\r\n\r\nimport CoreController from './controllers/Core';\r\nimport NewController from './controllers/New';\r\n\r\nexport default lib.defineModule('Core', {\r\n  depts: [],\r\n  config: [],\r\n  controllers: [CoreController, NewController],\r\n  directives: [],\r\n  filters: [],\r\n  factories: [],\r\n  resources: [],\r\n  services: []\r\n});","import {Controller} from 'lib';\r\n\r\nclass Core extends Controller {\r\n  static get $conf() {\r\n    return {\r\n      name: 'CoreController',\r\n      inject: ['$rootScope', '$http'],\r\n      resolve: {}\r\n    }\r\n  }\r\n\r\n  init() {\r\n    console.log('hello', this);\r\n\r\n    this.qwerty = 'qwerty';\r\n  }\r\n}\r\n\r\nexport default Core;","import {Controller} from 'lib';\r\n\r\nclass New extends Controller {\r\n  static get $conf() {\r\n    return {\r\n      name: 'NewController',\r\n      inject: ['$rootScope', '$q'],\r\n      resolve: {}\r\n    }\r\n  }\r\n\r\n  init() {\r\n    console.log('hello new', this);\r\n  }\r\n}\r\n\r\nexport default New;","function defineApp(name, depts = [], internalDepts = []) {\r\n  for(let dept of internalDepts) {\r\n    if(dept.name) {\r\n      depts.push(dept.name);\r\n    } else {\r\n      throw('Name property not found in dependencies!');\r\n    }\r\n  }\r\n\r\n  let app = angular.module(name, depts);\r\n\r\n\r\n  angular.element(document).ready(() => {\r\n    angular.bootstrap(document, [ app.name ]);\r\n  });\r\n\r\n\r\n}\r\n\r\nfunction defineController(ctrl, to) {\r\n  let c = ctrl.$conf;\r\n  let inject = Array.prototype.concat(\"$scope\", c.inject, ctrl);\r\n\r\n  console.log(inject);\r\n\r\n  to.controller(c.name, inject);\r\n}\r\n\r\nfunction defineModule(name, options = {}) {\r\n  var m = angular.module(name, options.depts || []);\r\n\r\n  if(options.controllers) {\r\n    for(let controller of options.controllers) {\r\n      defineController(controller, m);\r\n    }\r\n  }\r\n\r\n  return {\r\n    name: name\r\n  }\r\n}\r\n\r\nexport default { defineApp: defineApp, defineModule: defineModule };\r\n\r\nexport class Controller {\r\n  constructor(...args) {\r\n    let c = Array.prototype.concat('$scope', this.constructor.$conf.inject);\r\n\r\n    for(let i = 0, size = args.length; i < size; i++) {\r\n      this[`_${c[i]}`] = args[i];\r\n    }\r\n\r\n    this.init && this.init();\r\n  }\r\n}","import CoreModule from './modules/Core/module';\r\n\r\nimport lib from './lib';\r\nlib.defineApp('app', [], [CoreModule]);"],"sourceRoot":"/source/"}